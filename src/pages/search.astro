---
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.astro";

let videos = [];
let error;

if (Astro.request.method == "POST") {
  const data = await Astro.request.formData();
  const search = data.get("search");

  const text = await (
    await fetch(`${import.meta.env.BACKEND}/search/video?search=${search}`, {
      headers: {
        "x-userip": Astro.request.headers.get("x-forwarded-for"),
      },
    })
  ).text();
  if (text.startsWith("redirect-"))
    return Astro.redirect(text.replace("redirect-", ""));

  if (text.startsWith("error-")) {
    error = text.replace("error-", "");
  } else {
    videos = JSON.parse(text);
    if (videos.length == 0) error = "No results found.";
  }
} else {
  error =
    "You can only look up directly from the main page. You're going to prison, stalker child.";
}
---

<Layout
  title="Search | PreserveTube"
  description="PreserveTube is a time capsule for YouTube videos! It allows you to preserve any YouTube video, creating a snapshot that will always be available even if the original video disappears or is taken down."
  keywords="youtube archive, youtube video history, youtube deleted, youtube deleted video, youtube downloader, youtube archiver"
>
  <main>
    <Header />
    {
      error ? (
        <div class="mt-1 text-center">{error}</div>
      ) : (
        <div class="grid grid-cols-3 gap-2 mx-[10%] mt-[1%]">
          {videos.map((v) => (
            <div class="p-5">
              <a href={`/watch?v=${v.id}`}>
                <img class="w-full aspect-video" src={v.thumbnail} />
                <div class="mt-1 text-xl font-bold">{v.title}</div>
                <div class="text-sm mt-1">
                  Published on {v.published} | Archived on {v.archived}
                </div>
              </a>
              <div class="flex items-center mt-[2px]">
                <img
                  src={v.channelAvatar}
                  class="w-5 h-5 rounded-full inline-block"
                />
                <span class="pl-[10px] text-base">
                  <a href={`/channel/${v.channelId}`} class="flex items-center">
                    {v.channel}
                    {v.channelVerified && (
                      <img
                        src="https://api.iconify.design/ion/checkmark-circle.svg"
                        class="w-3 h-3 ml-[2px]"
                      />
                    )}
                  </a>
                </span>
              </div>
            </div>
          ))}
        </div>
      )
    }
  </main>
</Layout>
